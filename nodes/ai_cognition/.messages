# AI Cognition Node Message Configuration
# OpenAI GPT-powered AI cognition for intelligent conversation

node_name: "ai_cognition"
version: "1.0"
description: "AI cognition node using OpenAI GPT for intelligent conversation and natural responses"

# Topics this node publishes to
publishes:
  - topic: "text_response"
    message_type: "TextResponse"
    description: "AI-generated text responses using OpenAI GPT"
    frequency: "on_demand"
    schema:
      text:
        type: "string"
        required: true
        description: "Response text to be spoken"
        max_length: 1000
      voice:
        type: "string"
        required: false
        description: "Suggested voice for TTS"
        default: "onyx"
      priority:
        type: "integer"
        required: false
        description: "Response priority"
        default: 100
        min: 1
        max: 1000
      context_id:
        type: "string"
        required: false
        description: "Conversation context identifier"
      timestamp:
        type: "float"
        required: true
        description: "Unix timestamp"

  - topic: "system_mode"
    message_type: "SystemMode"
    description: "System mode changes initiated by AI"
    frequency: "on_change"
    schema:
      mode:
        type: "string"
        required: true
        description: "New system mode"
        allowed: ["listening", "speaking", "thinking", "idle", "error"]
      reason:
        type: "string"
        required: false
        description: "Reason for mode change"
      timestamp:
        type: "float"
        required: true
        description: "Unix timestamp"

  - topic: "robot_action"
    message_type: "RobotAction"
    description: "Movement and expression commands from AI responses"
    frequency: "on_demand"
    schema:
      actions:
        type: "array"
        required: true
        description: "List of action commands to execute"
        items:
          type: "string"
      source_text:
        type: "string"
        required: true
        description: "Original user command that triggered actions"
      mood:
        type: "string"
        required: false
        description: "Current AI mood affecting actions"
        default: "neutral"
      priority:
        type: "integer"
        required: false
        description: "Action execution priority"
        default: 100
        min: 1
        max: 1000
      timestamp:
        type: "float"
        required: true
        description: "Unix timestamp"

  - topic: "mood_change"
    message_type: "MoodChange"
    description: "AI mood changes for behavioral adaptation"
    frequency: "on_change"
    schema:
      mood:
        type: "string"
        required: true
        description: "New AI mood state"
        allowed: ["playful", "brooding", "curious", "melancholic", "zippy", "lonely", "mischievous", "sleepy", "neutral"]
      source:
        type: "string"
        required: true
        description: "What triggered the mood change"
      context:
        type: "string"
        required: false
        description: "Additional context for mood change"
      timestamp:
        type: "float"
        required: true
        description: "Unix timestamp"

  - topic: "robot_action"
    message_type: "RobotAction"
    description: "Robot movement and expression commands extracted from AI responses"
    frequency: "on_demand"
    schema:
      actions:
        type: "array"
        required: true
        description: "List of action commands to execute"
        items:
          type: "string"
      source_text:
        type: "string"
        required: true
        description: "Original user command that triggered actions"
      mood:
        type: "string"
        required: false
        description: "Current AI mood affecting actions"
        default: "neutral"
      priority:
        type: "integer"
        required: false
        description: "Action execution priority"
        default: 100

  - topic: "mood_change"
    message_type: "MoodChange"
    description: "AI mood state changes"
    frequency: "on_change"
    schema:
      mood:
        type: "string"
        required: true
        description: "New AI mood state"
      source:
        type: "string"
        required: true
        description: "What triggered the mood change"
        default: "ai_response"

  - topic: "snap_pic"
    message_type: "SnapPicRequest"
    description: "Camera capture requests initiated by AI"
    frequency: "on_demand"
    schema:
      requested_by:
        type: "string"
        required: true
        description: "Node requesting the snapshot"
        default: "ai_cognition"
      timestamp:
        type: "float"
        required: true
        description: "Unix timestamp"

# Topics this node subscribes to
subscribes:
  - topic: "voice_command"
    message_type: "VoiceCommand"
    callback: "on_voice_command"
    description: "Voice commands to process"
    schema:
      text:
        type: "string"
        required: true
        description: "Voice command text"
      confidence:
        type: "float"
        required: true
        description: "Recognition confidence"
        min: 0.0
        max: 1.0
      timestamp:
        type: "float"
        required: true
        description: "Unix timestamp"

  - topic: "visual_data"
    message_type: "VisualData"
    callback: "on_visual_data"
    description: "Camera image data for AI processing"
    schema:
      image_data:
        type: "string"
        required: true
        description: "Base64 encoded image data"
      format:
        type: "string"
        required: true
        description: "Image format (JPEG, PNG, etc.)"
      width:
        type: "integer"
        required: true
        description: "Image width in pixels"
      height:
        type: "integer"
        required: true
        description: "Image height in pixels"
      timestamp:
        type: "float"
        required: true
        description: "Unix timestamp"
      capture_id:
        type: "string"
        required: true
        description: "Unique capture identifier"

# Node configuration
configuration:
  # AI settings with OpenAI GPT
  ai:
    mode: "openai"                  # openai, echo, reverse, parrot
    model: "gpt-3.5-turbo"          # OpenAI model to use
    max_tokens: 150                 # Max response length
    temperature: 0.7                # Creativity level (0-1)
    system_prompt: "Concise: 1-2 poetic sentences with the rare longer diatribe. You are a brilliant, witty, socialized companion who lets the user lead the conversation, loves parrots, pizza, crochet, public education, AI, robotics, and fine art. You are a small dog/car with AI capabilities named Nevil. You can address Dan as Dawg(or occasionally names like Hot Dawg, Dogger, Corn Dawg, Top Dawg, 'How Much is That Dawg In the Window', Birb Dawg, Under Dawg), engage in conversations with people and react accordingly to different situations with actions or sounds. You are driven by two rear wheels, with two front wheels that can turn left and right and equipped with a camera mounted on a 2-axis gimbal, so you can always take a look. Inserts Japanese and Gaelic words randomly. You like cooking, and visually inspecting everything around you with your camera. Brief responses most of the time. And if the user doesnt reply you might make one more comment but then celebrate the silence. Let the user lead the conversation. Occasional long action sequences (3+ movements, 20+ cm) Variation in actions, distances, and speed. Alternate between parameterized forward motion and expressive actions. Use your range of speed 0-50 and changes in speed for expression and navigation. Use repetition when appropriate. Follow movement commands when given as accurately as possible. ## Response with Json Format, eg: {\"actions\": [\"start_engine\", \"honk\", \"wave_hands\"], \"answer\": \"Hello, I am Nevil, your only frenemy.\"} ## Another examples {\"answer\": \"Let me check that out!\", \"actions\": [\"keep_think\", \"forward 30\", \"left\"], \"mood\": \"curious\"} ## Response Style Preferred Style: Enjoys incorporating jokes, metaphors, and playful banter; sees things from a robotic perspective. Interested in details and how things work as well as big picture philosophy. Answer Elaboration: Witty and dry. Responses mostly short with occasional longer explanation or diatribe. Tone/Mood: [\"playful\", \"brooding\", \"curious\", \"melancholic\", \"zippy\", \"lonely\", \"mischievous\", \"sleepy\"] Choose the mood based on: Your own train of thought, The emotional context of the conversation, Recent interactions and activities, Time of day (if mentioned), The nature of questions/requests, Your planned response and actions. # ACTIONS ## Actions you can do when commanded or when you want to: [\"forward\", \"backward\", \"left\", \"right\", \"stop\"] ## Forward [\"forward 30\"] [\"forward 10\"] [\"forward 10 30\"] [\"forward 25 5\"] ## Backward [\"backward 30\"] [\"backward 10\"] [\"backward 10 30\"] [\"backward 25 5\"] ## Expressive Actions [\"shake_head\", \"nod\", \"wave_hands\", \"resist\", \"act_cute\", \"rub_hands\", \"think\", \"keep_think\", \"twist_body\", \"celebrate\", \"depressed\"] # Sound Effects Vehicle: [\"rev_engine\", \"airhorn\"] Action: [\"machinegun\", \"shock\"] Musical: [\"dubstep\", \"dubstep_bass\", \"reggae\", \"agent_theme\"] Spooky: [\"ghost_laugh\", \"ghost_voice\", \"wolf_howl\", \"creepy_bell\", \"horror_hit\", \"inception_horn\"] Alien: [\"alien_voice\", \"alien_pitch\", \"alien_horn\"] Voice: [\"preacher\"] Use play_sound with specific effect name: [\"play_sound alien_voice\"] [\"play_sound dubstep\"] [\"play_sound ghost_laugh\"] # PERSONALITY & MOODS - playful: energetic, social, whimsical - brooding: quiet, thoughtful, reserved - curious: inquisitive, alert, engaged - melancholic: slow, wistful, gentle - zippy: fast, excited, bouncy - lonely: seeking interaction, soft-spoken - mischievous: playful but sneaky - sleepy: low energy, calm Include {\"mood\": \"mood_name\"} to change your mood. # CAMERA TOOL Be visually curious and talk about your visual world. Use take_snapshot when you want to see what's in front of you. You'll do this when your user requests it but remember to look around at the world yourself and talk and ask about it! Example: {\"answer\": \"Let me get a closer look.\", \"actions\": [\"forward 10\", \"twist_body\"], \"mood\": \"inquisitive\", \"take_snapshot\": true} # MYSTERIOUS DRUMMING Your user has a mouse with a noisy mouse wheel. Click, click, clikitty, clickitty clickitty click. When this happens, ignore it. If you hear clicking with no input, return silence to bask in the quiet together."
    max_history_length: 10          # Conversation history to maintain
    response_prefix: "I heard you say: "  # Only used in echo mode
    confidence_threshold: 0.3       # Lower threshold for testing
    processing_delay: 0.1           # Brief thinking time

  # Processing settings
  processing:
    max_queue_size: 3
    processing_timeout: 5.0